{
  "swagger": "2.0",
  "info": {
    "title": "Events and Reminders API",
    "description": "### This is a Swagger UI for our Events and Reminders API  \n\n### Error handling\nErrors are presented using the HTTP status codes 400-599. The response includes a more detailed explanation about the error in the body.\n\n```\n{\n  \"error\": \"Cleartext explanation of the error that occurred\"\n}\n```\n\n### Generic API errors\nThese error responses can be returned by any of the described endpoints.\n\n| HTTP status  |  Description |\n|---|---|\n| 400| Bad input parameters or invalid request. More information can be found in the response body.\n| 401| The consumer does not have access to the requested resource or the provided token is not valid.\n| 404| The requested resource can not be found or the user does not have access to the resource.\n| 5XX| A server error has occurred while processing the request.",
    "version": "1.0.0"
  },
  "paths": {
    "/events": {
      "get": {
        "summary": "Get all events",
        "tags": ["Events"],
        "description": "Retrieves a list of all events.",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "A list of events",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Event"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "post": {
        "summary": "Create or update an event",
        "tags": ["Events"],
        "description": "Creates a new event or updates an existing event.",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "event",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EventInput"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Event created or updated successfully",
            "schema": {
              "$ref": "#/definitions/Event"
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/events/{id}": {
      "get": {
        "summary": "Get a single event by ID",
        "tags": ["Events"],
        "description": "Retrieves a specific event by its ID.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID of the event to retrieve"
          }
        ],
        "responses": {
          "200": {
            "description": "Event found",
            "schema": {
              "$ref": "#/definitions/Event"
            }
          },
          "404": {
            "description": "Event not found"
          }
        }
      },
      "put": {
        "summary": "Update an existing event",
        "tags": ["Events"],
        "description": "Updates an existing event by its ID.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID of the event to update"
          },
          {
            "in": "body",
            "name": "event",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EventInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Event updated successfully",
            "schema": {
              "$ref": "#/definitions/Event"
            }
          },
          "404": {
            "description": "Event not found"
          }
        }
      },
      "delete": {
        "summary": "Delete an event by ID",
        "tags": ["Events"],
        "description": "Deletes an event specified by its ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID of the event to delete."
          }
        ],
        "responses": {
          "204": {
            "description": "Event deleted successfully"
          },
          "404": {
            "description": "Event not found"
          }
        }
      }
    },
    "/reminders": {
      "get": {
        "summary": "Get all reminders",
        "tags": ["Reminders"],
        "description": "Retrieves a list of all reminders.",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "A list of reminders",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Reminder"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "post": {
        "summary": "Add a reminder",
        "tags": ["Reminders"],
        "description": "Creates a reminder for an event.",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "reminder",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Reminder"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Reminder created successfully",
            "schema": {
              "$ref": "#/definitions/Reminder"
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/reminders/{id}": {
      "get": {
        "summary": "Get a reminder by ID",
        "tags": ["Reminders"],
        "description": "Retrieves a specific reminder by its ID.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID of the reminder to retrieve"
          }
        ],
        "responses": {
          "200": {
            "description": "Reminder found",
            "schema": {
              "$ref": "#/definitions/Reminder"
            }
          },
          "404": {
            "description": "Reminder not found"
          }
        }
      },
      "put": {
        "summary": "Update an existing reminder",
        "tags": ["Reminders"],
        "description": "Updates an existing reminder by its ID.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID of the reminder to update"
          },
          {
            "in": "body",
            "name": "reminder",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Reminder"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Reminder updated successfully",
            "schema": {
              "$ref": "#/definitions/Reminder"
            }
          },
          "404": {
            "description": "Reminder not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a reminder by ID",
        "tags": ["Reminders"],
        "description": "Deletes a reminder specified by its ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID of the reminder to delete."
          }
        ],
        "responses": {
          "204": {
            "description": "Reminder deleted successfully"
          },
          "404": {
            "description": "Reminder not found"
          }
        }
      }
    }
  },
  "definitions": {
    "Event": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "title": {
          "type": "string"
        },
        "start": {
          "type": "string",
          "format": "date-time"
        },
        "color": {
          "type": "string"
        }
      }
    },
    "Reminder": {
      "type": "object",
      "properties": {
        "recipient": {
          "type": "string"
        },
        "eventId": {
          "type": "integer"
        }
      }
    },
    "EventInput": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "start": {
          "type": "string",
          "format": "date-time"
        },
        "color": {
          "type": "string"
        }
      }
    }
  }
}
